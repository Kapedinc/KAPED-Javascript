/*
 * KAPED PARTNER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.36
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KapedPartnerApi);
  }
}(this, function(expect, KapedPartnerApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KapedPartnerApi.RESTCallsApi();
  });

  describe('(package)', function() {
    describe('RESTCallsApi', function() {
      describe('activeCardGet', function() {
        it('should call activeCardGet successfully', function(done) {
          // TODO: uncomment, update parameter values for activeCardGet call
          /*

          instance.activeCardGet(apiKey, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('applicationStatusUpdate', function() {
        it('should call applicationStatusUpdate successfully', function(done) {
          // TODO: uncomment, update parameter values for applicationStatusUpdate call
          /*

          instance.applicationStatusUpdate(body, apiKey, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('checkStatusGet', function() {
        it('should call checkStatusGet successfully', function(done) {
          // TODO: uncomment, update parameter values for checkStatusGet call
          /*

          instance.checkStatusGet(apiKey, applicationID, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('editApplication', function() {
        it('should call editApplication successfully', function(done) {
          // TODO: uncomment, update parameter values for editApplication call
          /*

          instance.editApplication(body, apiKey, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listApplicationGet', function() {
        it('should call listApplicationGet successfully', function(done) {
          // TODO: uncomment, update parameter values for listApplicationGet call
          /*

          instance.listApplicationGet(apiKey, type, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('loginTokenPost', function() {
        it('should call loginTokenPost successfully', function(done) {
          // TODO: uncomment, update parameter values for loginTokenPost call
          /*

          instance.loginTokenPost(body, apiKey, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('resumeApplication', function() {
        it('should call resumeApplication successfully', function(done) {
          // TODO: uncomment, update parameter values for resumeApplication call
          /*

          instance.resumeApplication(body, apiKey, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('singleApplicationGet', function() {
        it('should call singleApplicationGet successfully', function(done) {
          // TODO: uncomment, update parameter values for singleApplicationGet call
          /*

          instance.singleApplicationGet(apiKey, applicationID, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('singleCardGet', function() {
        it('should call singleCardGet successfully', function(done) {
          // TODO: uncomment, update parameter values for singleCardGet call
          /*

          instance.singleCardGet(apiKey, userUniqueId, month, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitApplication', function() {
        it('should call submitApplication successfully', function(done) {
          // TODO: uncomment, update parameter values for submitApplication call and complete the assertions
          /*

          instance.submitApplication(body, apiKey, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(KapedPartnerApi.SubmitApplication);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('viewCardDetail', function() {
        it('should call viewCardDetail successfully', function(done) {
          // TODO: uncomment, update parameter values for viewCardDetail call
          /*

          instance.viewCardDetail(body, apiKey, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
