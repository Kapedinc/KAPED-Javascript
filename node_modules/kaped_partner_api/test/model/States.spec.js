/*
 * KAPED PARTNER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.37
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KapedPartnerApi);
  }
}(this, function(expect, KapedPartnerApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('States', function() {
      beforeEach(function() {
        instance = KapedPartnerApi.States;
      });

      it('should create an instance of States', function() {
        // TODO: update the code to test States
        expect(instance).to.be.a('object');
      });

      it('should have the property AL', function() {
        expect(instance).to.have.property('AL');
        expect(instance.AL).to.be("AL");
      });

      it('should have the property AK', function() {
        expect(instance).to.have.property('AK');
        expect(instance.AK).to.be("AK");
      });

      it('should have the property AZ', function() {
        expect(instance).to.have.property('AZ');
        expect(instance.AZ).to.be("AZ");
      });

      it('should have the property AR', function() {
        expect(instance).to.have.property('AR');
        expect(instance.AR).to.be("AR");
      });

      it('should have the property CA', function() {
        expect(instance).to.have.property('CA');
        expect(instance.CA).to.be("CA");
      });

      it('should have the property CO', function() {
        expect(instance).to.have.property('CO');
        expect(instance.CO).to.be("CO");
      });

      it('should have the property CT', function() {
        expect(instance).to.have.property('CT');
        expect(instance.CT).to.be("CT");
      });

      it('should have the property DE', function() {
        expect(instance).to.have.property('DE');
        expect(instance.DE).to.be("DE");
      });

      it('should have the property DC', function() {
        expect(instance).to.have.property('DC');
        expect(instance.DC).to.be("DC");
      });

      it('should have the property FL', function() {
        expect(instance).to.have.property('FL');
        expect(instance.FL).to.be("FL");
      });

      it('should have the property GA', function() {
        expect(instance).to.have.property('GA');
        expect(instance.GA).to.be("GA");
      });

      it('should have the property HI', function() {
        expect(instance).to.have.property('HI');
        expect(instance.HI).to.be("HI");
      });

      it('should have the property ID', function() {
        expect(instance).to.have.property('ID');
        expect(instance.ID).to.be("ID");
      });

      it('should have the property IL', function() {
        expect(instance).to.have.property('IL');
        expect(instance.IL).to.be("IL");
      });

      it('should have the property IN', function() {
        expect(instance).to.have.property('IN');
        expect(instance.IN).to.be("IN");
      });

      it('should have the property IA', function() {
        expect(instance).to.have.property('IA');
        expect(instance.IA).to.be("IA");
      });

      it('should have the property KS', function() {
        expect(instance).to.have.property('KS');
        expect(instance.KS).to.be("KS");
      });

      it('should have the property KY', function() {
        expect(instance).to.have.property('KY');
        expect(instance.KY).to.be("KY");
      });

      it('should have the property LA', function() {
        expect(instance).to.have.property('LA');
        expect(instance.LA).to.be("LA");
      });

      it('should have the property ME', function() {
        expect(instance).to.have.property('ME');
        expect(instance.ME).to.be("ME");
      });

      it('should have the property MD', function() {
        expect(instance).to.have.property('MD');
        expect(instance.MD).to.be("MD");
      });

      it('should have the property MA', function() {
        expect(instance).to.have.property('MA');
        expect(instance.MA).to.be("MA");
      });

      it('should have the property MI', function() {
        expect(instance).to.have.property('MI');
        expect(instance.MI).to.be("MI");
      });

      it('should have the property MN', function() {
        expect(instance).to.have.property('MN');
        expect(instance.MN).to.be("MN");
      });

      it('should have the property MS', function() {
        expect(instance).to.have.property('MS');
        expect(instance.MS).to.be("MS");
      });

      it('should have the property MO', function() {
        expect(instance).to.have.property('MO');
        expect(instance.MO).to.be("MO");
      });

      it('should have the property MT', function() {
        expect(instance).to.have.property('MT');
        expect(instance.MT).to.be("MT");
      });

      it('should have the property NE', function() {
        expect(instance).to.have.property('NE');
        expect(instance.NE).to.be("NE");
      });

      it('should have the property NV', function() {
        expect(instance).to.have.property('NV');
        expect(instance.NV).to.be("NV");
      });

      it('should have the property NH', function() {
        expect(instance).to.have.property('NH');
        expect(instance.NH).to.be("NH");
      });

      it('should have the property NJ', function() {
        expect(instance).to.have.property('NJ');
        expect(instance.NJ).to.be("NJ");
      });

      it('should have the property NM', function() {
        expect(instance).to.have.property('NM');
        expect(instance.NM).to.be("NM");
      });

      it('should have the property NY', function() {
        expect(instance).to.have.property('NY');
        expect(instance.NY).to.be("NY");
      });

      it('should have the property NC', function() {
        expect(instance).to.have.property('NC');
        expect(instance.NC).to.be("NC");
      });

      it('should have the property ND', function() {
        expect(instance).to.have.property('ND');
        expect(instance.ND).to.be("ND");
      });

      it('should have the property OH', function() {
        expect(instance).to.have.property('OH');
        expect(instance.OH).to.be("OH");
      });

      it('should have the property OK', function() {
        expect(instance).to.have.property('OK');
        expect(instance.OK).to.be("OK");
      });

      it('should have the property OR', function() {
        expect(instance).to.have.property('OR');
        expect(instance.OR).to.be("OR");
      });

      it('should have the property PA', function() {
        expect(instance).to.have.property('PA');
        expect(instance.PA).to.be("PA");
      });

      it('should have the property RI', function() {
        expect(instance).to.have.property('RI');
        expect(instance.RI).to.be("RI");
      });

      it('should have the property SC', function() {
        expect(instance).to.have.property('SC');
        expect(instance.SC).to.be("SC");
      });

      it('should have the property SD', function() {
        expect(instance).to.have.property('SD');
        expect(instance.SD).to.be("SD");
      });

      it('should have the property TN', function() {
        expect(instance).to.have.property('TN');
        expect(instance.TN).to.be("TN");
      });

      it('should have the property TX', function() {
        expect(instance).to.have.property('TX');
        expect(instance.TX).to.be("TX");
      });

      it('should have the property UT', function() {
        expect(instance).to.have.property('UT');
        expect(instance.UT).to.be("UT");
      });

      it('should have the property VT', function() {
        expect(instance).to.have.property('VT');
        expect(instance.VT).to.be("VT");
      });

      it('should have the property VA', function() {
        expect(instance).to.have.property('VA');
        expect(instance.VA).to.be("VA");
      });

      it('should have the property WA', function() {
        expect(instance).to.have.property('WA');
        expect(instance.WA).to.be("WA");
      });

      it('should have the property WV', function() {
        expect(instance).to.have.property('WV');
        expect(instance.WV).to.be("WV");
      });

      it('should have the property WI', function() {
        expect(instance).to.have.property('WI');
        expect(instance.WI).to.be("WI");
      });

      it('should have the property WY', function() {
        expect(instance).to.have.property('WY');
        expect(instance.WY).to.be("WY");
      });

      it('should have the property PR', function() {
        expect(instance).to.have.property('PR');
        expect(instance.PR).to.be("PR");
      });

      it('should have the property VI', function() {
        expect(instance).to.have.property('VI');
        expect(instance.VI).to.be("VI");
      });

      it('should have the property AE', function() {
        expect(instance).to.have.property('AE');
        expect(instance.AE).to.be("AE");
      });

      it('should have the property AA', function() {
        expect(instance).to.have.property('AA');
        expect(instance.AA).to.be("AA");
      });

      it('should have the property AP', function() {
        expect(instance).to.have.property('AP');
        expect(instance.AP).to.be("AP");
      });

      it('should have the property AS', function() {
        expect(instance).to.have.property('AS');
        expect(instance.AS).to.be("AS");
      });

      it('should have the property GU', function() {
        expect(instance).to.have.property('GU');
        expect(instance.GU).to.be("GU");
      });

      it('should have the property PW', function() {
        expect(instance).to.have.property('PW');
        expect(instance.PW).to.be("PW");
      });

      it('should have the property FM', function() {
        expect(instance).to.have.property('FM');
        expect(instance.FM).to.be("FM");
      });

      it('should have the property MP', function() {
        expect(instance).to.have.property('MP');
        expect(instance.MP).to.be("MP");
      });

      it('should have the property MH', function() {
        expect(instance).to.have.property('MH');
        expect(instance.MH).to.be("MH");
      });

    });
  });

}));
