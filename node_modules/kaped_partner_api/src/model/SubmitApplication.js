/*
 * KAPED PARTNER API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.37
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Business} from './Business';
import {Gender} from './Gender';
import {Ownership} from './Ownership';
import {SIC} from './SIC';
import {States} from './States';

/**
 * The SubmitApplication model module.
 * @module model/SubmitApplication
 * @version 1.2.0
 */
export class SubmitApplication {
  /**
   * Constructs a new <code>SubmitApplication</code>.
   * @alias module:model/SubmitApplication
   * @class
   * @param applicationType {String} B2B2B
   * @param partnerBusinessName {String} 
   * @param partnerTaxID {Number} 
   * @param partnerDateIncorporated {String} YYYY-MM-DD
   * @param partnerBusinessType {module:model/Business} 
   * @param partnerBusinessAddress {String} 
   * @param partnerGeneralInformationCity {String} 
   * @param partnerGeneralInformationState {module:model/States} 
   * @param partnerGeneralInformationZip {Number} 
   * @param partnerWebsite {String} 
   * @param partnerSIC {module:model/SIC} 
   * @param partnerOwnership {module:model/Ownership} 
   * @param partnerBusinessDescription {String} 
   * @param partnerBusinessPhone {Number} 
   * @param partnerCustomerSupportEmail {String} 
   * @param partnerInitialCreditLimit {Number} 
   * @param partnerCustomerInformationFirstName {String} 
   * @param partnerCustomerInformationLastName {String} 
   * @param partnerCustomerInformationHomeAddress {String} 
   * @param partnerCustomerInformationState {module:model/States} 
   * @param partnerCustomerInformationCity {String} 
   * @param partnercustomerInformationZip {Number} 
   * @param partnerCustomerInformationPercentOwnership {Number} 
   * @param partnerCustomerInformationDrivingLicenseNumber {String} 
   * @param partnerCustomerInformationLicenseDate {String} YYYY-MM-DD
   * @param partnerCustomerInformationDOB {String} YYYY-MM-DD
   * @param partnerCustomerInformationSSN {String} 
   * @param partnerTermsConditions {Boolean} 
   * @param haveInsurance {Boolean} 
   * @param gender {module:model/Gender} 
   * @param EIN {Array.<Blob>} 
   * @param articles {Array.<Blob>} 
   * @param sSNCard {Array.<Blob>} 
   * @param dLFront {Array.<Blob>} 
   * @param dLBack {Array.<Blob>} 
   */
  constructor(applicationType, partnerBusinessName, partnerTaxID, partnerDateIncorporated, partnerBusinessType, partnerBusinessAddress, partnerGeneralInformationCity, partnerGeneralInformationState, partnerGeneralInformationZip, partnerWebsite, partnerSIC, partnerOwnership, partnerBusinessDescription, partnerBusinessPhone, partnerCustomerSupportEmail, partnerInitialCreditLimit, partnerCustomerInformationFirstName, partnerCustomerInformationLastName, partnerCustomerInformationHomeAddress, partnerCustomerInformationState, partnerCustomerInformationCity, partnercustomerInformationZip, partnerCustomerInformationPercentOwnership, partnerCustomerInformationDrivingLicenseNumber, partnerCustomerInformationLicenseDate, partnerCustomerInformationDOB, partnerCustomerInformationSSN, partnerTermsConditions, haveInsurance, gender, EIN, articles, sSNCard, dLFront, dLBack) {
    this.applicationType = applicationType;
    this.partnerBusinessName = partnerBusinessName;
    this.partnerTaxID = partnerTaxID;
    this.partnerDateIncorporated = partnerDateIncorporated;
    this.partnerBusinessType = partnerBusinessType;
    this.partnerBusinessAddress = partnerBusinessAddress;
    this.partnerGeneralInformationCity = partnerGeneralInformationCity;
    this.partnerGeneralInformationState = partnerGeneralInformationState;
    this.partnerGeneralInformationZip = partnerGeneralInformationZip;
    this.partnerWebsite = partnerWebsite;
    this.partnerSIC = partnerSIC;
    this.partnerOwnership = partnerOwnership;
    this.partnerBusinessDescription = partnerBusinessDescription;
    this.partnerBusinessPhone = partnerBusinessPhone;
    this.partnerCustomerSupportEmail = partnerCustomerSupportEmail;
    this.partnerInitialCreditLimit = partnerInitialCreditLimit;
    this.partnerCustomerInformationFirstName = partnerCustomerInformationFirstName;
    this.partnerCustomerInformationLastName = partnerCustomerInformationLastName;
    this.partnerCustomerInformationHomeAddress = partnerCustomerInformationHomeAddress;
    this.partnerCustomerInformationState = partnerCustomerInformationState;
    this.partnerCustomerInformationCity = partnerCustomerInformationCity;
    this.partnercustomerInformationZip = partnercustomerInformationZip;
    this.partnerCustomerInformationPercentOwnership = partnerCustomerInformationPercentOwnership;
    this.partnerCustomerInformationDrivingLicenseNumber = partnerCustomerInformationDrivingLicenseNumber;
    this.partnerCustomerInformationLicenseDate = partnerCustomerInformationLicenseDate;
    this.partnerCustomerInformationDOB = partnerCustomerInformationDOB;
    this.partnerCustomerInformationSSN = partnerCustomerInformationSSN;
    this.partnerTermsConditions = partnerTermsConditions;
    this.haveInsurance = haveInsurance;
    this.gender = gender;
    this.EIN = EIN;
    this.articles = articles;
    this.sSNCard = sSNCard;
    this.dLFront = dLFront;
    this.dLBack = dLBack;
  }

  /**
   * Constructs a <code>SubmitApplication</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SubmitApplication} obj Optional instance to populate.
   * @return {module:model/SubmitApplication} The populated <code>SubmitApplication</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SubmitApplication();
      if (data.hasOwnProperty('applicationType'))
        obj.applicationType = ApiClient.convertToType(data['applicationType'], 'String');
      if (data.hasOwnProperty('partnerBusinessName'))
        obj.partnerBusinessName = ApiClient.convertToType(data['partnerBusinessName'], 'String');
      if (data.hasOwnProperty('partnerTaxID'))
        obj.partnerTaxID = ApiClient.convertToType(data['partnerTaxID'], 'Number');
      if (data.hasOwnProperty('partnerDateIncorporated'))
        obj.partnerDateIncorporated = ApiClient.convertToType(data['partnerDateIncorporated'], 'String');
      if (data.hasOwnProperty('partnerBusinessType'))
        obj.partnerBusinessType = Business.constructFromObject(data['partnerBusinessType']);
      if (data.hasOwnProperty('partnerBusinessAddress'))
        obj.partnerBusinessAddress = ApiClient.convertToType(data['partnerBusinessAddress'], 'String');
      if (data.hasOwnProperty('partnerStreet2'))
        obj.partnerStreet2 = ApiClient.convertToType(data['partnerStreet2'], 'String');
      if (data.hasOwnProperty('partnerGeneralInformationCity'))
        obj.partnerGeneralInformationCity = ApiClient.convertToType(data['partnerGeneralInformationCity'], 'String');
      if (data.hasOwnProperty('partnerGeneralInformationState'))
        obj.partnerGeneralInformationState = States.constructFromObject(data['partnerGeneralInformationState']);
      if (data.hasOwnProperty('partnerGeneralInformationZip'))
        obj.partnerGeneralInformationZip = ApiClient.convertToType(data['partnerGeneralInformationZip'], 'Number');
      if (data.hasOwnProperty('partnerWebsite'))
        obj.partnerWebsite = ApiClient.convertToType(data['partnerWebsite'], 'String');
      if (data.hasOwnProperty('partnerSIC'))
        obj.partnerSIC = SIC.constructFromObject(data['partnerSIC']);
      if (data.hasOwnProperty('partnerOwnership'))
        obj.partnerOwnership = Ownership.constructFromObject(data['partnerOwnership']);
      if (data.hasOwnProperty('partnerBusinessDescription'))
        obj.partnerBusinessDescription = ApiClient.convertToType(data['partnerBusinessDescription'], 'String');
      if (data.hasOwnProperty('partnerBusinessPhone'))
        obj.partnerBusinessPhone = ApiClient.convertToType(data['partnerBusinessPhone'], 'Number');
      if (data.hasOwnProperty('partnerCustomerSupportEmail'))
        obj.partnerCustomerSupportEmail = ApiClient.convertToType(data['partnerCustomerSupportEmail'], 'String');
      if (data.hasOwnProperty('partnerBusinessFax'))
        obj.partnerBusinessFax = ApiClient.convertToType(data['partnerBusinessFax'], 'Number');
      if (data.hasOwnProperty('partnerInitialCreditLimit'))
        obj.partnerInitialCreditLimit = ApiClient.convertToType(data['partnerInitialCreditLimit'], 'Number');
      if (data.hasOwnProperty('partnerCustomerInformationFirstName'))
        obj.partnerCustomerInformationFirstName = ApiClient.convertToType(data['partnerCustomerInformationFirstName'], 'String');
      if (data.hasOwnProperty('partnerCustomerInformationLastName'))
        obj.partnerCustomerInformationLastName = ApiClient.convertToType(data['partnerCustomerInformationLastName'], 'String');
      if (data.hasOwnProperty('partnerCustomerInformationHomeAddress'))
        obj.partnerCustomerInformationHomeAddress = ApiClient.convertToType(data['partnerCustomerInformationHomeAddress'], 'String');
      if (data.hasOwnProperty('partnerCustomerInformationHomeStreet2'))
        obj.partnerCustomerInformationHomeStreet2 = ApiClient.convertToType(data['partnerCustomerInformationHomeStreet2'], 'String');
      if (data.hasOwnProperty('partnerCustomerInformationState'))
        obj.partnerCustomerInformationState = States.constructFromObject(data['partnerCustomerInformationState']);
      if (data.hasOwnProperty('partnerCustomerInformationCity'))
        obj.partnerCustomerInformationCity = ApiClient.convertToType(data['partnerCustomerInformationCity'], 'String');
      if (data.hasOwnProperty('partnercustomerInformationZip'))
        obj.partnercustomerInformationZip = ApiClient.convertToType(data['partnercustomerInformationZip'], 'Number');
      if (data.hasOwnProperty('partnerCustomerInformationPercentOwnership'))
        obj.partnerCustomerInformationPercentOwnership = ApiClient.convertToType(data['partnerCustomerInformationPercentOwnership'], 'Number');
      if (data.hasOwnProperty('partnerCustomerInformationDrivingLicenseNumber'))
        obj.partnerCustomerInformationDrivingLicenseNumber = ApiClient.convertToType(data['partnerCustomerInformationDrivingLicenseNumber'], 'String');
      if (data.hasOwnProperty('partnerCustomerInformationLicenseDate'))
        obj.partnerCustomerInformationLicenseDate = ApiClient.convertToType(data['partnerCustomerInformationLicenseDate'], 'String');
      if (data.hasOwnProperty('partnerCustomerInformationDOB'))
        obj.partnerCustomerInformationDOB = ApiClient.convertToType(data['partnerCustomerInformationDOB'], 'String');
      if (data.hasOwnProperty('partnerCustomerInformationSSN'))
        obj.partnerCustomerInformationSSN = ApiClient.convertToType(data['partnerCustomerInformationSSN'], 'String');
      if (data.hasOwnProperty('partnerTermsConditions'))
        obj.partnerTermsConditions = ApiClient.convertToType(data['partnerTermsConditions'], 'Boolean');
      if (data.hasOwnProperty('haveInsurance'))
        obj.haveInsurance = ApiClient.convertToType(data['haveInsurance'], 'Boolean');
      if (data.hasOwnProperty('gender'))
        obj.gender = Gender.constructFromObject(data['gender']);
      if (data.hasOwnProperty('EIN'))
        obj.EIN = ApiClient.convertToType(data['EIN'], ['Blob']);
      if (data.hasOwnProperty('Articles'))
        obj.articles = ApiClient.convertToType(data['Articles'], ['Blob']);
      if (data.hasOwnProperty('SSNCard'))
        obj.sSNCard = ApiClient.convertToType(data['SSNCard'], ['Blob']);
      if (data.hasOwnProperty('DL_Front'))
        obj.dLFront = ApiClient.convertToType(data['DL_Front'], ['Blob']);
      if (data.hasOwnProperty('DL_Back'))
        obj.dLBack = ApiClient.convertToType(data['DL_Back'], ['Blob']);
    }
    return obj;
  }
}

/**
 * B2B2B
 * @member {String} applicationType
 */
SubmitApplication.prototype.applicationType = undefined;

/**
 * @member {String} partnerBusinessName
 */
SubmitApplication.prototype.partnerBusinessName = undefined;

/**
 * @member {Number} partnerTaxID
 */
SubmitApplication.prototype.partnerTaxID = undefined;

/**
 * YYYY-MM-DD
 * @member {String} partnerDateIncorporated
 */
SubmitApplication.prototype.partnerDateIncorporated = undefined;

/**
 * @member {module:model/Business} partnerBusinessType
 */
SubmitApplication.prototype.partnerBusinessType = undefined;

/**
 * @member {String} partnerBusinessAddress
 */
SubmitApplication.prototype.partnerBusinessAddress = undefined;

/**
 * @member {String} partnerStreet2
 */
SubmitApplication.prototype.partnerStreet2 = undefined;

/**
 * @member {String} partnerGeneralInformationCity
 */
SubmitApplication.prototype.partnerGeneralInformationCity = undefined;

/**
 * @member {module:model/States} partnerGeneralInformationState
 */
SubmitApplication.prototype.partnerGeneralInformationState = undefined;

/**
 * @member {Number} partnerGeneralInformationZip
 */
SubmitApplication.prototype.partnerGeneralInformationZip = undefined;

/**
 * @member {String} partnerWebsite
 */
SubmitApplication.prototype.partnerWebsite = undefined;

/**
 * @member {module:model/SIC} partnerSIC
 */
SubmitApplication.prototype.partnerSIC = undefined;

/**
 * @member {module:model/Ownership} partnerOwnership
 */
SubmitApplication.prototype.partnerOwnership = undefined;

/**
 * @member {String} partnerBusinessDescription
 */
SubmitApplication.prototype.partnerBusinessDescription = undefined;

/**
 * @member {Number} partnerBusinessPhone
 */
SubmitApplication.prototype.partnerBusinessPhone = undefined;

/**
 * @member {String} partnerCustomerSupportEmail
 */
SubmitApplication.prototype.partnerCustomerSupportEmail = undefined;

/**
 * @member {Number} partnerBusinessFax
 */
SubmitApplication.prototype.partnerBusinessFax = undefined;

/**
 * @member {Number} partnerInitialCreditLimit
 */
SubmitApplication.prototype.partnerInitialCreditLimit = undefined;

/**
 * @member {String} partnerCustomerInformationFirstName
 */
SubmitApplication.prototype.partnerCustomerInformationFirstName = undefined;

/**
 * @member {String} partnerCustomerInformationLastName
 */
SubmitApplication.prototype.partnerCustomerInformationLastName = undefined;

/**
 * @member {String} partnerCustomerInformationHomeAddress
 */
SubmitApplication.prototype.partnerCustomerInformationHomeAddress = undefined;

/**
 * @member {String} partnerCustomerInformationHomeStreet2
 */
SubmitApplication.prototype.partnerCustomerInformationHomeStreet2 = undefined;

/**
 * @member {module:model/States} partnerCustomerInformationState
 */
SubmitApplication.prototype.partnerCustomerInformationState = undefined;

/**
 * @member {String} partnerCustomerInformationCity
 */
SubmitApplication.prototype.partnerCustomerInformationCity = undefined;

/**
 * @member {Number} partnercustomerInformationZip
 */
SubmitApplication.prototype.partnercustomerInformationZip = undefined;

/**
 * @member {Number} partnerCustomerInformationPercentOwnership
 */
SubmitApplication.prototype.partnerCustomerInformationPercentOwnership = undefined;

/**
 * @member {String} partnerCustomerInformationDrivingLicenseNumber
 */
SubmitApplication.prototype.partnerCustomerInformationDrivingLicenseNumber = undefined;

/**
 * YYYY-MM-DD
 * @member {String} partnerCustomerInformationLicenseDate
 */
SubmitApplication.prototype.partnerCustomerInformationLicenseDate = undefined;

/**
 * YYYY-MM-DD
 * @member {String} partnerCustomerInformationDOB
 */
SubmitApplication.prototype.partnerCustomerInformationDOB = undefined;

/**
 * @member {String} partnerCustomerInformationSSN
 */
SubmitApplication.prototype.partnerCustomerInformationSSN = undefined;

/**
 * @member {Boolean} partnerTermsConditions
 */
SubmitApplication.prototype.partnerTermsConditions = undefined;

/**
 * @member {Boolean} haveInsurance
 */
SubmitApplication.prototype.haveInsurance = undefined;

/**
 * @member {module:model/Gender} gender
 */
SubmitApplication.prototype.gender = undefined;

/**
 * @member {Array.<Blob>} EIN
 */
SubmitApplication.prototype.EIN = undefined;

/**
 * @member {Array.<Blob>} articles
 */
SubmitApplication.prototype.articles = undefined;

/**
 * @member {Array.<Blob>} sSNCard
 */
SubmitApplication.prototype.sSNCard = undefined;

/**
 * @member {Array.<Blob>} dLFront
 */
SubmitApplication.prototype.dLFront = undefined;

/**
 * @member {Array.<Blob>} dLBack
 */
SubmitApplication.prototype.dLBack = undefined;

